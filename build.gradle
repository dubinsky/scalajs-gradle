plugins {
  id 'com.github.ben-manes.versions' version '0.52.0'
  id 'scala'
  id 'signing'
  id 'org.podval.tools.scalajs' version '0.9.2'
  id 'com.gradle.plugin-publish' version '1.3.1'
}

group = 'org.podval.tools'
version = version_plugin
description = 'Gradle plugin for cross-compiling to JVM, Scala.js and Scala Native'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)
scala.scalaVersion = version_scala
project.gradle.startParameter.excludedTaskNames.add('compileJava')

dependencies {
  // for TestClassVisitor
  implementation 'org.ow2.asm:asm:9.8'

  // Scala.js Linker uses it but somehow does not bring it onto the classpath;
  // adding this dynamically did not *quite* work - and that's ok :)
  implementation 'org.scala-lang.modules:scala-parallel-collections_2.13:1.2.0'

  // for running tests
  compileOnly "org.scala-sbt:test-interface:$version_sbt_test_interface"

  // for Scala.js support
  compileOnly "org.scala-js:scalajs-linker_2.13:$version_scalajs"
  compileOnly "org.scala-js:scalajs-sbt-test-adapter_2.13:$version_scalajs"
  compileOnly "org.scala-js:scalajs-env-jsdom-nodejs_2.13:$version_scalajs_env_jsdom_nodejs"
  compileOnly "io.github.gmkumar2005:scala-js-env-playwright_2.12:$version_scala_js_env_playwright"

  // for Scala Native support
  compileOnly "org.scala-native:tools_native0.5_3:$version_scalanative"
  compileOnly "org.scala-native:test-runner_3:$version_scalanative"

  // for framework-specific exceptions
  compileOnly "junit:junit:$version_junit"
  compileOnly "org.scalatest:scalatest_3:$version_framework_scalatest"
  compileOnly "org.scalacheck:scalacheck_3:$version_framework_scalacheck"
  compileOnly "com.lihaoyi:utest_3:$version_framework_utest"
  compileOnly "org.specs2:specs2-core_3:$version_framework_specs2"
  compileOnly "org.scalameta:munit_3:$version_framework_munit"
  compileOnly "dev.zio:zio-test-sbt_3:$version_framework_zio_test"

  // test framework used to test this project
  testImplementation "org.scalatest:scalatest_3:$version_framework_scalatest"
}

def isNonStable = { String version ->
  boolean stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
  String regex = /^[0-9,.v-]+(-r)?$/
  return !stableKeyword && !(version ==~ regex)
}

// dependencyUpdates.revision = 'release'
tasks.named("dependencyUpdates").configure {
  rejectVersionIf {
    isNonStable(it.candidate.version)
  }
}

tasks.withType(ScalaCompile).configureEach {
  scalaCompileOptions.with {
    additionalParameters = [
      '-new-syntax',
      '-feature',
      '-language:strictEquality'
//      '-source:future'
    ]
  }
}

jar {
  manifest {
    attributes(
      'Implementation-Title'  : project.description,
      'Implementation-Version': project.version
    )
  }
}

gradlePlugin {
  website = 'https://github.com/dubinsky/scalajs-gradle'
  vcsUrl  = 'git@github.com:dubinsky/scalajs-gradle.git'
  plugins {
    scalajs {
      id = 'org.podval.tools.scalajs'
      implementationClass = 'org.podval.tools.backend.BackendPlugin'
      displayName = project.description
      description = project.description
      tags = [
        'scala', 'scalajs', 'scalanative', 'crosscompile',
        'sbt', 'testing',
        'junit4', 'munit', 'scalatest', 'scalacheck', 'specs2', 'utest', 'ziotest']
    }
  }
}
